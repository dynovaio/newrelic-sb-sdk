# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../notebooks/Utils/Text.ipynb.


__all__ = ["snake2camel", "camel2snake", "camelize_keys", "snakeize_keys"]


import re


def snake2camel(snake_string: str) -> str:
    """Convert snake case to camel case."""
    head, *tail = snake_string.split("_")
    camel_string = "".join(
        [
            head.lower(),
            *[word.capitalize() for word in tail],
        ]
    )
    return camel_string


def camel2snake(camel_string: str) -> str:
    """Convert camel case to snake case."""
    return re.sub(r"(([A-Z][a-z])|([0-9])+)", r"_\1", camel_string).lower().strip("_")


def camelize_keys(obj: dict, convert_objects_inside_lists: bool = True) -> dict:
    """Convert dictionary keys to camel case."""
    camelized_obj = {}

    for key, value in dict(obj).items():
        if isinstance(value, dict):
            camelized_obj.update(
                {
                    snake2camel(key): camelize_keys(value),
                },
            )
        elif (
            isinstance(value, list) and len(value) > 0 and convert_objects_inside_lists
        ):
            camelized_obj.update(
                {
                    snake2camel(key): [
                        camelize_keys(item) if isinstance(item, dict) else item
                        for item in value
                    ],
                },
            )
        else:
            camelized_obj.update(
                {
                    snake2camel(key): value,
                },
            )

    return camelized_obj


def snakeize_keys(obj: dict, convert_objects_inside_lists: bool = True) -> dict:
    """Convert dictionary keys to snake case."""
    snakeized_obj = {}

    for key, value in dict(obj).items():
        if isinstance(value, dict):
            snakeized_obj.update(
                {
                    camel2snake(key): snakeize_keys(value),
                },
            )
        elif (
            isinstance(value, list) and len(value) > 0 and convert_objects_inside_lists
        ):
            snakeized_obj.update(
                {
                    camel2snake(key): [
                        snakeize_keys(item) if isinstance(item, dict) else item
                        for item in value
                    ]
                },
            )
        else:
            snakeized_obj.update(
                {
                    camel2snake(key): value,
                }
            )

    return snakeized_obj
